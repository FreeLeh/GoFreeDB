//go:build gofreedb_test

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/FreeLeh/GoFreeDB/lark/auth (interfaces: accessTokenAPI)
//
// Generated by this command:
//
//	mockgen -destination=api_mock.go -package=auth -build_constraint=gofreedb_test . accessTokenAPI
//

// Package auth is a generated GoMock package.
package auth

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockaccessTokenAPI is a mock of accessTokenAPI interface.
type MockaccessTokenAPI struct {
	ctrl     *gomock.Controller
	recorder *MockaccessTokenAPIMockRecorder
	isgomock struct{}
}

// MockaccessTokenAPIMockRecorder is the mock recorder for MockaccessTokenAPI.
type MockaccessTokenAPIMockRecorder struct {
	mock *MockaccessTokenAPI
}

// NewMockaccessTokenAPI creates a new mock instance.
func NewMockaccessTokenAPI(ctrl *gomock.Controller) *MockaccessTokenAPI {
	mock := &MockaccessTokenAPI{ctrl: ctrl}
	mock.recorder = &MockaccessTokenAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockaccessTokenAPI) EXPECT() *MockaccessTokenAPIMockRecorder {
	return m.recorder
}

// TenantAccessToken mocks base method.
func (m *MockaccessTokenAPI) TenantAccessToken(ctx context.Context, appID, appSecret string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TenantAccessToken", ctx, appID, appSecret)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TenantAccessToken indicates an expected call of TenantAccessToken.
func (mr *MockaccessTokenAPIMockRecorder) TenantAccessToken(ctx, appID, appSecret any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TenantAccessToken", reflect.TypeOf((*MockaccessTokenAPI)(nil).TenantAccessToken), ctx, appID, appSecret)
}
