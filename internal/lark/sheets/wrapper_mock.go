//go:build gofreedb_test

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/FreeLeh/GoFreeDB/internal/lark/sheets (interfaces: AccessTokenGetter)
//
// Generated by this command:
//
//	mockgen -destination=wrapper_mock.go -package=sheets -build_constraint=gofreedb_test . AccessTokenGetter
//

// Package sheets is a generated GoMock package.
package sheets

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockAccessTokenGetter is a mock of AccessTokenGetter interface.
type MockAccessTokenGetter struct {
	ctrl     *gomock.Controller
	recorder *MockAccessTokenGetterMockRecorder
	isgomock struct{}
}

// MockAccessTokenGetterMockRecorder is the mock recorder for MockAccessTokenGetter.
type MockAccessTokenGetterMockRecorder struct {
	mock *MockAccessTokenGetter
}

// NewMockAccessTokenGetter creates a new mock instance.
func NewMockAccessTokenGetter(ctrl *gomock.Controller) *MockAccessTokenGetter {
	mock := &MockAccessTokenGetter{ctrl: ctrl}
	mock.recorder = &MockAccessTokenGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccessTokenGetter) EXPECT() *MockAccessTokenGetterMockRecorder {
	return m.recorder
}

// AccessToken mocks base method.
func (m *MockAccessTokenGetter) AccessToken() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AccessToken")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AccessToken indicates an expected call of AccessToken.
func (mr *MockAccessTokenGetterMockRecorder) AccessToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AccessToken", reflect.TypeOf((*MockAccessTokenGetter)(nil).AccessToken))
}
